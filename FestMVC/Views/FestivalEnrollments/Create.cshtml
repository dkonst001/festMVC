@model FestMVC.Models.FestivalEnrollment

@{
    ViewBag.Title = "Create";
}

<h2>Festival Enrollment</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        @*<h4>Festival Enrollment</h4>*@
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @if (User.IsInRole("Admin"))
        {
            <div class="form-group">
                @Html.LabelFor(model => model.UserId, "UserId", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownList("UserId", null, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.UserId, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.FestivalId, "FestivalId", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownList("FestivalId", null, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.FestivalId, "", new { @class = "text-danger" })
                </div>
            </div>
        }
        else
        {
            @Html.HiddenFor(model => model.UserId)
            @Html.HiddenFor(model => model.FestivalId)
            <div class="form-group">
                @Html.LabelFor(model => model.User.Name, "User Name", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <div class="form-control divInput">
                        @Html.DisplayFor(model => model.User.Name)
                    </div>
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Festival.Name, "Festival Name", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <div class="form-control divInput">
                        @Html.DisplayFor(model => model.Festival.Name)
                    </div>
                </div>
            </div>

            @*<div class="form-group">
                    @Html.LabelFor(model => model.UserId, "UserId", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.UserId, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.UserId, "", new { @class = "text-danger" })
                    </div>
                </div>*@
        }


        <div class="form-group">
            @Html.LabelFor(model => model.NumOfTickets, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.NumOfTickets, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.NumOfTickets, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-1 col-md-offset-2">
                @Html.ActionLink("Back...", null, null, null, new { href = Request.UrlReferrer,@class= "btn btn-offset btn-success" })
            </div>
            <div class="col-md-1">
                <input type="submit" value="Enroll Festival" class="btn btn-success" />
            </div>
        </div>
    </div>
}



@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
